# Multi-stage build - Build stage
FROM maven:3-openjdk-17-slim AS build

# Set the working directory
WORKDIR /app

# Copy Maven configuration files
COPY pom.xml .
COPY mvnw .
COPY mvnw.cmd .
COPY .mvn .mvn

# Download dependencies (leverage Docker cache)
RUN mvn dependency:go-offline -B

# Copy source code
COPY src ./src

# Build the application
RUN mvn clean package -DskipTests

# Run stage
FROM openjdk:17.0.1-jdk-slim

# Install curl for health checks
RUN sed -i 's/deb.debian.org/mirrors.tuna.tsinghua.edu.cn/g' /etc/apt/sources.list \
&& sed -i 's|security.debian.org/debian-security|mirrors.tuna.tsinghua.edu.cn/debian-security|g' /etc/apt/sources.list \
&& apt-get update \
&& apt-get install -y curl \
&& rm -rf /var/lib/apt/lists/*

# Create a non-root user
RUN groupadd -r securechat && useradd -r -g securechat securechat

# Set the working directory
WORKDIR /app

# Copy the JAR file from the build stage
COPY --from=build /app/target/securechat-0.0.1-SNAPSHOT.jar app.jar

# Create the uploads directory and set permissions
RUN mkdir -p /app/uploads && chown -R securechat:securechat /app

# Switch to the non-root user
USER securechat

# Expose the port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8080/actuator/health || exit 1

# Start the application
ENTRYPOINT ["java", "-jar", "app.jar"]
